
#include <iostream>
#include <cmath>
using namespace std;

int main()
{
    setlocale(0, "UKR");
    /*    
    //1.С клавиатуры вводится целое число. Вывести на экран все числа, на которые введённое число делится без остатка.
    int x;
    cout << "Введите число: ";
    cin >> x;
    for (int i = 1; i <= x; i++) {
        if (x % i == 0) {
            cout << i << "\n";
        }
    }
    return 0;
    */

    /*
     //2.Написать игру «Угадай число».Пользователь мысленно загадывает число от 0 до 1000, компьютер отгадывает его за минимальное количество попыток.
    //srand(time(0));
    //int x = rand() % 1000;
    //cout << x << "\n";

    int choice;
    for (int i = 1; i <= 1000; i++) {
        cout << "Ваше число " << i << "? (1 - да, 2 - нет)" << "\n";
        cin >> choice;
        if (choice == 1) {
            cout << "Успех!!!\n";
            break;
        }
        else if (choice == 2) {
            cout << "Угадываем дальше\n";
        }
    }
    return 0;

    //Второй вариант с бинарным поиском 

    srand(time(0));
    int x = rand() % 1000;
    cout << x << "\n";

    int left = 0;
    int right = 1000;

    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (mid == x) {
            cout <<"Угадал!" << x << "\n";
            break;
        }
        else if (x > mid) {
            left = mid + 1;
            cout << "не Угадал! x > mid\n";  //для отображения процесса поиска загаданого числа
        }
        else if (x < mid) {
            right = mid - 1;
            cout << "не Угадал! x < mid\n";  //для отображения процесса поиска загаданого числа
        }
    }
    */


    /*
    //3.Ежемесячная стипендия студента составляет N гривен, а расходы на проживание превышают стипендию и составляют M гривен в месяц. Рост цен ежемесячно увеличивает расходы на 3%. Составьте программу расчёта суммы денег, которую необходимо единовременно попросить у родителей, чтобы можно было прожить учебный год (10 месяцев), используя только эти деньги и стипендию.
    double N; // доходы
    cout << "Введите количество доходов: ";
    cin >> N;

    double M; // расходы
    cout << "Введите количество расходов: ";
    cin >> M;

    int i = 1;
    double help = 0;
    while (i <= 2) {
        double dif = M - N;
        M *= 1.03;
        i += 1;
        help += dif;
    }
    cout << help;
    */
    


/*
    //6.Королю нужно убить дракона, но средства его казны – ограничены.  Нужно создать программу, которая поможет рассчитать минимальное количество копейщиков, которое необходимо, чтобы убить дракона. Данные очков здоровья и атаки дракона и одного копейщика вводятся с клавиатуры.
    int D_hp; 
    cout << "Введите количество жизней дракона: ";
    cin >> D_hp;

    int D_dmg;
    cout << "Введите урон дракона: ";
    cin >> D_dmg;

    int x = 0;          // количество копейщиков

    int K_dmg;
    cout << "Введите урон копейщика: ";
    cin >> K_dmg;

    int K_hp_one;
    cout << "Введите количество жизни 1-го копейщика: ";
    cin >> K_hp_one;

    int y;

    while (D_hp > 0) {  // пока жизни дракона больше 0 добавляем по 1-му копейщику
        x+=1;
        int K_hp = x * K_hp_one;
        int y = x;      // вводим дубль для количества копейщиков чтобы уменьшать его в цикле ниже не затрагивая основной подсчет копейщиков
        D_hp = 500;
        while (y > 0) { // пока копейщиков больше 0
            D_hp -= y * K_dmg;
            K_hp -= D_dmg;
            y = round (K_hp / 10);
        }
    }
    cout <<"Нужно " << x << " копейщиков" << "\n";
*/

}
